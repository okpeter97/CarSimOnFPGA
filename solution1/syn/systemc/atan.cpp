// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "atan.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic atan::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic atan::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<41> atan::ap_ST_fsm_state1 = "1";
const sc_lv<41> atan::ap_ST_fsm_state2 = "10";
const sc_lv<41> atan::ap_ST_fsm_state3 = "100";
const sc_lv<41> atan::ap_ST_fsm_state4 = "1000";
const sc_lv<41> atan::ap_ST_fsm_state5 = "10000";
const sc_lv<41> atan::ap_ST_fsm_state6 = "100000";
const sc_lv<41> atan::ap_ST_fsm_state7 = "1000000";
const sc_lv<41> atan::ap_ST_fsm_state8 = "10000000";
const sc_lv<41> atan::ap_ST_fsm_state9 = "100000000";
const sc_lv<41> atan::ap_ST_fsm_state10 = "1000000000";
const sc_lv<41> atan::ap_ST_fsm_state11 = "10000000000";
const sc_lv<41> atan::ap_ST_fsm_state12 = "100000000000";
const sc_lv<41> atan::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<41> atan::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<41> atan::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<41> atan::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<41> atan::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<32> atan::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> atan::ap_const_lv1_1 = "1";
const sc_lv<32> atan::ap_const_lv32_1 = "1";
const sc_lv<1> atan::ap_const_lv1_0 = "0";
const sc_lv<32> atan::ap_const_lv32_20 = "100000";
const sc_lv<32> atan::ap_const_lv32_21 = "100001";
const sc_lv<32> atan::ap_const_lv32_22 = "100010";
const sc_lv<32> atan::ap_const_lv32_27 = "100111";
const sc_lv<32> atan::ap_const_lv32_28 = "101000";
const sc_lv<64> atan::ap_const_lv64_3FE921FB54442D18 = "11111111101001001000011111101101010100010001000010110100011000";
const sc_lv<64> atan::ap_const_lv64_3FF921FB54442D18 = "11111111111001001000011111101101010100010001000010110100011000";
const sc_lv<32> atan::ap_const_lv32_23 = "100011";
const sc_lv<64> atan::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<32> atan::ap_const_lv32_2 = "10";
const sc_lv<32> atan::ap_const_lv32_3F = "111111";
const sc_lv<32> atan::ap_const_lv32_34 = "110100";
const sc_lv<32> atan::ap_const_lv32_3E = "111110";
const sc_lv<11> atan::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> atan::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<64> atan::ap_const_lv64_7FFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<11> atan::ap_const_lv11_3FE = "1111111110";
const sc_lv<5> atan::ap_const_lv5_1 = "1";
const sc_lv<64> atan::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool atan::ap_const_boolean_1 = true;

atan::atan(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_atan_generic_double_s_fu_57 = new atan_generic_double_s("grp_atan_generic_double_s_fu_57");
    grp_atan_generic_double_s_fu_57->ap_clk(ap_clk);
    grp_atan_generic_double_s_fu_57->ap_rst(ap_rst);
    grp_atan_generic_double_s_fu_57->ap_start(grp_atan_generic_double_s_fu_57_ap_start);
    grp_atan_generic_double_s_fu_57->ap_done(grp_atan_generic_double_s_fu_57_ap_done);
    grp_atan_generic_double_s_fu_57->ap_idle(grp_atan_generic_double_s_fu_57_ap_idle);
    grp_atan_generic_double_s_fu_57->ap_ready(grp_atan_generic_double_s_fu_57_ap_ready);
    grp_atan_generic_double_s_fu_57->t_in(din_reg_212);
    grp_atan_generic_double_s_fu_57->ap_return(grp_atan_generic_double_s_fu_57_ap_return);
    top_level_dsub_64rcU_U36 = new top_level_dsub_64rcU<1,5,64,64,64>("top_level_dsub_64rcU_U36");
    top_level_dsub_64rcU_U36->clk(ap_clk);
    top_level_dsub_64rcU_U36->reset(ap_rst);
    top_level_dsub_64rcU_U36->din0(ap_var_for_const0);
    top_level_dsub_64rcU_U36->din1(res_reg_217);
    top_level_dsub_64rcU_U36->ce(ap_var_for_const1);
    top_level_dsub_64rcU_U36->dout(grp_fu_64_p2);
    top_level_ddiv_64sc4_U37 = new top_level_ddiv_64sc4<1,31,64,64,64>("top_level_ddiv_64sc4_U37");
    top_level_ddiv_64sc4_U37->clk(ap_clk);
    top_level_ddiv_64sc4_U37->reset(ap_rst);
    top_level_ddiv_64sc4_U37->din0(ap_var_for_const2);
    top_level_ddiv_64sc4_U37->din1(absx_reg_182);
    top_level_ddiv_64sc4_U37->ce(ap_var_for_const1);
    top_level_ddiv_64sc4_U37->dout(grp_fu_69_p2);
    top_level_dcmp_64tde_U38 = new top_level_dcmp_64tde<1,2,64,64,1>("top_level_dcmp_64tde_U38");
    top_level_dcmp_64tde_U38->clk(ap_clk);
    top_level_dcmp_64tde_U38->reset(ap_rst);
    top_level_dcmp_64tde_U38->din0(grp_fu_74_p0);
    top_level_dcmp_64tde_U38->din1(ap_var_for_const2);
    top_level_dcmp_64tde_U38->ce(ap_var_for_const1);
    top_level_dcmp_64tde_U38->opcode(ap_var_for_const3);
    top_level_dcmp_64tde_U38->dout(grp_fu_74_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_absx_fu_117_p1);
    sensitive << ( p_Result_44_fu_109_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_f_assign_phi_fu_46_p8);
    sensitive << ( icmp_ln833_reg_189 );
    sensitive << ( tmp_4_reg_198 );
    sensitive << ( octant1_reg_202 );
    sensitive << ( res_1_reg_223 );
    sensitive << ( f_assign_reg_42 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( bitcast_ln512_fu_168_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_bitcast_ln512_fu_168_p1);
    sensitive << ( p_Result_45_fu_161_p3 );

    SC_METHOD(thread_din_fu_147_p3);
    sensitive << ( absx_reg_182 );
    sensitive << ( octant1_reg_202 );
    sensitive << ( one_over_x_reg_207 );

    SC_METHOD(thread_grp_atan_generic_double_s_fu_57_ap_start);
    sensitive << ( grp_atan_generic_double_s_fu_57_ap_start_reg );

    SC_METHOD(thread_grp_fu_74_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_Result_44_fu_109_p3 );

    SC_METHOD(thread_icmp_ln833_3_fu_128_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln833_fu_122_p2 );
    sensitive << ( tmp_V_14_fu_101_p1 );

    SC_METHOD(thread_icmp_ln833_fu_122_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_V_fu_91_p4 );

    SC_METHOD(thread_octant1_fu_142_p2);
    sensitive << ( tmp_V_reg_177 );
    sensitive << ( grp_fu_74_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Result_44_fu_109_p3);
    sensitive << ( trunc_ln368_fu_105_p1 );

    SC_METHOD(thread_p_Result_45_fu_161_p3);
    sensitive << ( p_Result_s_reg_172 );
    sensitive << ( trunc_ln368_1_fu_157_p1 );

    SC_METHOD(thread_p_Val2_56_fu_153_p1);
    sensitive << ( ap_phi_mux_f_assign_phi_fu_46_p8 );

    SC_METHOD(thread_p_Val2_s_fu_79_p1);
    sensitive << ( x );

    SC_METHOD(thread_select_ln639_fu_134_p3);
    sensitive << ( icmp_ln833_3_fu_128_p2 );

    SC_METHOD(thread_tmp_V_14_fu_101_p1);
    sensitive << ( p_Val2_s_fu_79_p1 );

    SC_METHOD(thread_tmp_V_fu_91_p4);
    sensitive << ( p_Val2_s_fu_79_p1 );

    SC_METHOD(thread_trunc_ln368_1_fu_157_p1);
    sensitive << ( p_Val2_56_fu_153_p1 );

    SC_METHOD(thread_trunc_ln368_fu_105_p1);
    sensitive << ( p_Val2_s_fu_79_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln833_fu_122_p2 );
    sensitive << ( grp_fu_74_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( octant1_reg_202 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_atan_generic_double_s_fu_57_ap_done );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "00000000000000000000000000000000000000001";
    grp_atan_generic_double_s_fu_57_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "atan_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Result_s_reg_172, "p_Result_s_reg_172");
    sc_trace(mVcdFile, tmp_V_fu_91_p4, "tmp_V_fu_91_p4");
    sc_trace(mVcdFile, tmp_V_reg_177, "tmp_V_reg_177");
    sc_trace(mVcdFile, absx_fu_117_p1, "absx_fu_117_p1");
    sc_trace(mVcdFile, absx_reg_182, "absx_reg_182");
    sc_trace(mVcdFile, icmp_ln833_fu_122_p2, "icmp_ln833_fu_122_p2");
    sc_trace(mVcdFile, icmp_ln833_reg_189, "icmp_ln833_reg_189");
    sc_trace(mVcdFile, select_ln639_fu_134_p3, "select_ln639_fu_134_p3");
    sc_trace(mVcdFile, grp_fu_74_p2, "grp_fu_74_p2");
    sc_trace(mVcdFile, tmp_4_reg_198, "tmp_4_reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, octant1_fu_142_p2, "octant1_fu_142_p2");
    sc_trace(mVcdFile, octant1_reg_202, "octant1_reg_202");
    sc_trace(mVcdFile, grp_fu_69_p2, "grp_fu_69_p2");
    sc_trace(mVcdFile, one_over_x_reg_207, "one_over_x_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, din_fu_147_p3, "din_fu_147_p3");
    sc_trace(mVcdFile, din_reg_212, "din_reg_212");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_return, "grp_atan_generic_double_s_fu_57_ap_return");
    sc_trace(mVcdFile, res_reg_217, "res_reg_217");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_ready, "grp_atan_generic_double_s_fu_57_ap_ready");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_done, "grp_atan_generic_double_s_fu_57_ap_done");
    sc_trace(mVcdFile, grp_fu_64_p2, "grp_fu_64_p2");
    sc_trace(mVcdFile, res_1_reg_223, "res_1_reg_223");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_start, "grp_atan_generic_double_s_fu_57_ap_start");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_idle, "grp_atan_generic_double_s_fu_57_ap_idle");
    sc_trace(mVcdFile, ap_phi_mux_f_assign_phi_fu_46_p8, "ap_phi_mux_f_assign_phi_fu_46_p8");
    sc_trace(mVcdFile, f_assign_reg_42, "f_assign_reg_42");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, grp_atan_generic_double_s_fu_57_ap_start_reg, "grp_atan_generic_double_s_fu_57_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_74_p0, "grp_fu_74_p0");
    sc_trace(mVcdFile, p_Val2_s_fu_79_p1, "p_Val2_s_fu_79_p1");
    sc_trace(mVcdFile, trunc_ln368_fu_105_p1, "trunc_ln368_fu_105_p1");
    sc_trace(mVcdFile, p_Result_44_fu_109_p3, "p_Result_44_fu_109_p3");
    sc_trace(mVcdFile, tmp_V_14_fu_101_p1, "tmp_V_14_fu_101_p1");
    sc_trace(mVcdFile, icmp_ln833_3_fu_128_p2, "icmp_ln833_3_fu_128_p2");
    sc_trace(mVcdFile, p_Val2_56_fu_153_p1, "p_Val2_56_fu_153_p1");
    sc_trace(mVcdFile, trunc_ln368_1_fu_157_p1, "trunc_ln368_1_fu_157_p1");
    sc_trace(mVcdFile, p_Result_45_fu_161_p3, "p_Result_45_fu_161_p3");
    sc_trace(mVcdFile, bitcast_ln512_fu_168_p1, "bitcast_ln512_fu_168_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

atan::~atan() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_atan_generic_double_s_fu_57;
    delete top_level_dsub_64rcU_U36;
    delete top_level_ddiv_64sc4_U37;
    delete top_level_dcmp_64tde_U38;
}

void atan::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void atan::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_3FF921FB54442D18;
}

void atan::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_3FF0000000000000;
}

void atan::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv5_1;
}

void atan::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
            ap_return_preg = bitcast_ln512_fu_168_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(icmp_ln833_fu_122_p2.read(), ap_const_lv1_1))) {
        f_assign_reg_42 = select_ln639_fu_134_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                esl_seteq<1,1,1>(grp_atan_generic_double_s_fu_57_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(octant1_reg_202.read(), ap_const_lv1_0))) {
        f_assign_reg_42 = grp_atan_generic_double_s_fu_57_ap_return.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_74_p2.read()))) {
        f_assign_reg_42 = ap_const_lv64_3FE921FB54442D18;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, octant1_reg_202.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
                esl_seteq<1,1,1>(icmp_ln833_reg_189.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_4_reg_198.read(), ap_const_lv1_0))) {
        f_assign_reg_42 = res_1_reg_223.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_atan_generic_double_s_fu_57_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
            grp_atan_generic_double_s_fu_57_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_atan_generic_double_s_fu_57_ap_ready.read())) {
            grp_atan_generic_double_s_fu_57_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        absx_reg_182 = absx_fu_117_p1.read();
        icmp_ln833_reg_189 = icmp_ln833_fu_122_p2.read();
        p_Result_s_reg_172 = p_Val2_s_fu_79_p1.read().range(63, 63);
        tmp_V_reg_177 = p_Val2_s_fu_79_p1.read().range(62, 52);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        din_reg_212 = din_fu_147_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_fu_74_p2.read(), ap_const_lv1_0))) {
        octant1_reg_202 = octant1_fu_142_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, octant1_reg_202.read()))) {
        one_over_x_reg_207 = grp_fu_69_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        res_1_reg_223 = grp_fu_64_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_atan_generic_double_s_fu_57_ap_done.read(), ap_const_logic_1))) {
        res_reg_217 = grp_atan_generic_double_s_fu_57_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_4_reg_198 = grp_fu_74_p2.read();
    }
}

void atan::thread_absx_fu_117_p1() {
    absx_fu_117_p1 = p_Result_44_fu_109_p3.read();
}

void atan::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void atan::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void atan::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void atan::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void atan::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void atan::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void atan::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void atan::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void atan::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void atan::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void atan::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void atan::thread_ap_phi_mux_f_assign_phi_fu_46_p8() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, octant1_reg_202.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(icmp_ln833_reg_189.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_4_reg_198.read(), ap_const_lv1_0))) {
        ap_phi_mux_f_assign_phi_fu_46_p8 = res_1_reg_223.read();
    } else {
        ap_phi_mux_f_assign_phi_fu_46_p8 = f_assign_reg_42.read();
    }
}

void atan::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void atan::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        ap_return = bitcast_ln512_fu_168_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void atan::thread_bitcast_ln512_fu_168_p1() {
    bitcast_ln512_fu_168_p1 = p_Result_45_fu_161_p3.read();
}

void atan::thread_din_fu_147_p3() {
    din_fu_147_p3 = (!octant1_reg_202.read()[0].is_01())? sc_lv<64>(): ((octant1_reg_202.read()[0].to_bool())? one_over_x_reg_207.read(): absx_reg_182.read());
}

void atan::thread_grp_atan_generic_double_s_fu_57_ap_start() {
    grp_atan_generic_double_s_fu_57_ap_start = grp_atan_generic_double_s_fu_57_ap_start_reg.read();
}

void atan::thread_grp_fu_74_p0() {
    grp_fu_74_p0 = p_Result_44_fu_109_p3.read();
}

void atan::thread_icmp_ln833_3_fu_128_p2() {
    icmp_ln833_3_fu_128_p2 = (!tmp_V_14_fu_101_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_14_fu_101_p1.read() == ap_const_lv52_0);
}

void atan::thread_icmp_ln833_fu_122_p2() {
    icmp_ln833_fu_122_p2 = (!tmp_V_fu_91_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_fu_91_p4.read() == ap_const_lv11_7FF);
}

void atan::thread_octant1_fu_142_p2() {
    octant1_fu_142_p2 = (!tmp_V_reg_177.read().is_01() || !ap_const_lv11_3FE.is_01())? sc_lv<1>(): (sc_biguint<11>(tmp_V_reg_177.read()) > sc_biguint<11>(ap_const_lv11_3FE));
}

void atan::thread_p_Result_44_fu_109_p3() {
    p_Result_44_fu_109_p3 = esl_concat<1,63>(ap_const_lv1_0, trunc_ln368_fu_105_p1.read());
}

void atan::thread_p_Result_45_fu_161_p3() {
    p_Result_45_fu_161_p3 = esl_concat<1,63>(p_Result_s_reg_172.read(), trunc_ln368_1_fu_157_p1.read());
}

void atan::thread_p_Val2_56_fu_153_p1() {
    p_Val2_56_fu_153_p1 = ap_phi_mux_f_assign_phi_fu_46_p8.read();
}

void atan::thread_p_Val2_s_fu_79_p1() {
    p_Val2_s_fu_79_p1 = x.read();
}

void atan::thread_select_ln639_fu_134_p3() {
    select_ln639_fu_134_p3 = (!icmp_ln833_3_fu_128_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln833_3_fu_128_p2.read()[0].to_bool())? ap_const_lv64_3FF921FB54442D18: ap_const_lv64_7FFFFFFFFFFFFFFF);
}

void atan::thread_tmp_V_14_fu_101_p1() {
    tmp_V_14_fu_101_p1 = p_Val2_s_fu_79_p1.read().range(52-1, 0);
}

void atan::thread_tmp_V_fu_91_p4() {
    tmp_V_fu_91_p4 = p_Val2_s_fu_79_p1.read().range(62, 52);
}

void atan::thread_trunc_ln368_1_fu_157_p1() {
    trunc_ln368_1_fu_157_p1 = p_Val2_56_fu_153_p1.read().range(63-1, 0);
}

void atan::thread_trunc_ln368_fu_105_p1() {
    trunc_ln368_fu_105_p1 = p_Val2_s_fu_79_p1.read().range(63-1, 0);
}

void atan::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln833_fu_122_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln833_fu_122_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_74_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_atan_generic_double_s_fu_57_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(octant1_reg_202.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, octant1_reg_202.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_atan_generic_double_s_fu_57_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

