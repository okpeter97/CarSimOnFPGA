// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _atan_HH_
#define _atan_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "atan_generic_double_s.h"
#include "top_level_dsub_64rcU.h"
#include "top_level_ddiv_64sc4.h"
#include "top_level_dcmp_64tde.h"

namespace ap_rtl {

struct atan : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > x;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<5> > ap_var_for_const3;


    // Module declarations
    atan(sc_module_name name);
    SC_HAS_PROCESS(atan);

    ~atan();

    sc_trace_file* mVcdFile;

    atan_generic_double_s* grp_atan_generic_double_s_fu_57;
    top_level_dsub_64rcU<1,5,64,64,64>* top_level_dsub_64rcU_U36;
    top_level_ddiv_64sc4<1,31,64,64,64>* top_level_ddiv_64sc4_U37;
    top_level_dcmp_64tde<1,2,64,64,1>* top_level_dcmp_64tde_U38;
    sc_signal< sc_lv<41> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > p_Result_s_reg_172;
    sc_signal< sc_lv<11> > tmp_V_fu_91_p4;
    sc_signal< sc_lv<11> > tmp_V_reg_177;
    sc_signal< sc_lv<64> > absx_fu_117_p1;
    sc_signal< sc_lv<64> > absx_reg_182;
    sc_signal< sc_lv<1> > icmp_ln833_fu_122_p2;
    sc_signal< sc_lv<1> > icmp_ln833_reg_189;
    sc_signal< sc_lv<64> > select_ln639_fu_134_p3;
    sc_signal< sc_lv<1> > grp_fu_74_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_198;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > octant1_fu_142_p2;
    sc_signal< sc_lv<1> > octant1_reg_202;
    sc_signal< sc_lv<64> > grp_fu_69_p2;
    sc_signal< sc_lv<64> > one_over_x_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<64> > din_fu_147_p3;
    sc_signal< sc_lv<64> > din_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<64> > grp_atan_generic_double_s_fu_57_ap_return;
    sc_signal< sc_lv<64> > res_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > grp_atan_generic_double_s_fu_57_ap_ready;
    sc_signal< sc_logic > grp_atan_generic_double_s_fu_57_ap_done;
    sc_signal< sc_lv<64> > grp_fu_64_p2;
    sc_signal< sc_lv<64> > res_1_reg_223;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_logic > grp_atan_generic_double_s_fu_57_ap_start;
    sc_signal< sc_logic > grp_atan_generic_double_s_fu_57_ap_idle;
    sc_signal< sc_lv<64> > ap_phi_mux_f_assign_phi_fu_46_p8;
    sc_signal< sc_lv<64> > f_assign_reg_42;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > grp_atan_generic_double_s_fu_57_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > grp_fu_74_p0;
    sc_signal< sc_lv<64> > p_Val2_s_fu_79_p1;
    sc_signal< sc_lv<63> > trunc_ln368_fu_105_p1;
    sc_signal< sc_lv<64> > p_Result_44_fu_109_p3;
    sc_signal< sc_lv<52> > tmp_V_14_fu_101_p1;
    sc_signal< sc_lv<1> > icmp_ln833_3_fu_128_p2;
    sc_signal< sc_lv<64> > p_Val2_56_fu_153_p1;
    sc_signal< sc_lv<63> > trunc_ln368_1_fu_157_p1;
    sc_signal< sc_lv<64> > p_Result_45_fu_161_p3;
    sc_signal< sc_lv<64> > bitcast_ln512_fu_168_p1;
    sc_signal< sc_lv<64> > ap_return_preg;
    sc_signal< sc_lv<41> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<41> ap_ST_fsm_state1;
    static const sc_lv<41> ap_ST_fsm_state2;
    static const sc_lv<41> ap_ST_fsm_state3;
    static const sc_lv<41> ap_ST_fsm_state4;
    static const sc_lv<41> ap_ST_fsm_state5;
    static const sc_lv<41> ap_ST_fsm_state6;
    static const sc_lv<41> ap_ST_fsm_state7;
    static const sc_lv<41> ap_ST_fsm_state8;
    static const sc_lv<41> ap_ST_fsm_state9;
    static const sc_lv<41> ap_ST_fsm_state10;
    static const sc_lv<41> ap_ST_fsm_state11;
    static const sc_lv<41> ap_ST_fsm_state12;
    static const sc_lv<41> ap_ST_fsm_state13;
    static const sc_lv<41> ap_ST_fsm_state14;
    static const sc_lv<41> ap_ST_fsm_state15;
    static const sc_lv<41> ap_ST_fsm_state16;
    static const sc_lv<41> ap_ST_fsm_state17;
    static const sc_lv<41> ap_ST_fsm_state18;
    static const sc_lv<41> ap_ST_fsm_state19;
    static const sc_lv<41> ap_ST_fsm_state20;
    static const sc_lv<41> ap_ST_fsm_state21;
    static const sc_lv<41> ap_ST_fsm_state22;
    static const sc_lv<41> ap_ST_fsm_state23;
    static const sc_lv<41> ap_ST_fsm_state24;
    static const sc_lv<41> ap_ST_fsm_state25;
    static const sc_lv<41> ap_ST_fsm_state26;
    static const sc_lv<41> ap_ST_fsm_state27;
    static const sc_lv<41> ap_ST_fsm_state28;
    static const sc_lv<41> ap_ST_fsm_state29;
    static const sc_lv<41> ap_ST_fsm_state30;
    static const sc_lv<41> ap_ST_fsm_state31;
    static const sc_lv<41> ap_ST_fsm_state32;
    static const sc_lv<41> ap_ST_fsm_state33;
    static const sc_lv<41> ap_ST_fsm_state34;
    static const sc_lv<41> ap_ST_fsm_state35;
    static const sc_lv<41> ap_ST_fsm_state36;
    static const sc_lv<41> ap_ST_fsm_state37;
    static const sc_lv<41> ap_ST_fsm_state38;
    static const sc_lv<41> ap_ST_fsm_state39;
    static const sc_lv<41> ap_ST_fsm_state40;
    static const sc_lv<41> ap_ST_fsm_state41;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<64> ap_const_lv64_3FE921FB54442D18;
    static const sc_lv<64> ap_const_lv64_3FF921FB54442D18;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<64> ap_const_lv64_7FFFFFFFFFFFFFFF;
    static const sc_lv<11> ap_const_lv11_3FE;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_absx_fu_117_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_f_assign_phi_fu_46_p8();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bitcast_ln512_fu_168_p1();
    void thread_din_fu_147_p3();
    void thread_grp_atan_generic_double_s_fu_57_ap_start();
    void thread_grp_fu_74_p0();
    void thread_icmp_ln833_3_fu_128_p2();
    void thread_icmp_ln833_fu_122_p2();
    void thread_octant1_fu_142_p2();
    void thread_p_Result_44_fu_109_p3();
    void thread_p_Result_45_fu_161_p3();
    void thread_p_Val2_56_fu_153_p1();
    void thread_p_Val2_s_fu_79_p1();
    void thread_select_ln639_fu_134_p3();
    void thread_tmp_V_14_fu_101_p1();
    void thread_tmp_V_fu_91_p4();
    void thread_trunc_ln368_1_fu_157_p1();
    void thread_trunc_ln368_fu_105_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
