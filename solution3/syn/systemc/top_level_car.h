// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_level_car_HH_
#define _top_level_car_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "update_1.h"

namespace ap_rtl {

struct top_level_car : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > deltaTime;
    sc_in< sc_lv<32> > torque;
    sc_in< sc_lv<32> > steeringAngle;
    sc_out< sc_lv<32> > pos_x;
    sc_out< sc_logic > pos_x_ap_vld;
    sc_out< sc_lv<32> > pos_y;
    sc_out< sc_logic > pos_y_ap_vld;
    sc_out< sc_lv<32> > vel_x;
    sc_out< sc_logic > vel_x_ap_vld;
    sc_out< sc_lv<32> > vel_y;
    sc_out< sc_logic > vel_y_ap_vld;
    sc_out< sc_lv<32> > orientation;
    sc_out< sc_logic > orientation_ap_vld;


    // Module declarations
    top_level_car(sc_module_name name);
    SC_HAS_PROCESS(top_level_car);

    ~top_level_car();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    update_1* grp_update_1_fu_127;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > car_chassis_vel_z;
    sc_signal< sc_lv<32> > car_chassis_vel_x;
    sc_signal< sc_lv<32> > car_chassis_orientat;
    sc_signal< sc_lv<32> > car_chassis_pos_x;
    sc_signal< sc_lv<32> > car_chassis_pos_z;
    sc_signal< sc_logic > grp_update_1_fu_127_ap_start;
    sc_signal< sc_logic > grp_update_1_fu_127_ap_done;
    sc_signal< sc_logic > grp_update_1_fu_127_ap_idle;
    sc_signal< sc_logic > grp_update_1_fu_127_ap_ready;
    sc_signal< sc_lv<32> > grp_update_1_fu_127_car_chassis_vel_z_o;
    sc_signal< sc_logic > grp_update_1_fu_127_car_chassis_vel_z_o_ap_vld;
    sc_signal< sc_lv<32> > grp_update_1_fu_127_car_chassis_vel_x_o;
    sc_signal< sc_logic > grp_update_1_fu_127_car_chassis_vel_x_o_ap_vld;
    sc_signal< sc_lv<32> > grp_update_1_fu_127_car_chassis_orientat_o;
    sc_signal< sc_logic > grp_update_1_fu_127_car_chassis_orientat_o_ap_vld;
    sc_signal< sc_lv<32> > grp_update_1_fu_127_car_chassis_pos_x_o;
    sc_signal< sc_logic > grp_update_1_fu_127_car_chassis_pos_x_o_ap_vld;
    sc_signal< sc_lv<32> > grp_update_1_fu_127_car_chassis_pos_z_o;
    sc_signal< sc_logic > grp_update_1_fu_127_car_chassis_pos_z_o_ap_vld;
    sc_signal< sc_logic > grp_update_1_fu_127_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_update_1_fu_127_ap_start();
    void thread_orientation();
    void thread_orientation_ap_vld();
    void thread_pos_x();
    void thread_pos_x_ap_vld();
    void thread_pos_y();
    void thread_pos_y_ap_vld();
    void thread_vel_x();
    void thread_vel_x_ap_vld();
    void thread_vel_y();
    void thread_vel_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
